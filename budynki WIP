// ==UserScript==
// @name         AutoBudynki Tribal Wars (priorytet surowców)
// @namespace    http://tampermonkey.net/
// @version      1.3
// @description  Ulepszanie budynków z priorytetem na surowce (wood/stone/iron)
// @author       ChatGPT
// @match        *://*.plemiona.pl/game.php*screen=main*
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    // ✅ Ustaw docelowe poziomy budynków tutaj:
    // jak nie chcesz jakiegoś budynku to po prostu go odkomentuj
    const targetLevels = {
        main: 20,
        barracks: 25,
        stable: 20,
        garage: 5,
        //watchtower: 0,
        smith: 20,
        place: 1,
        statue: 1,
        market: 20,
        wood: 30,
        stone: 30,
        iron: 30,
        farm: 30,
        storage: 30,
        hide: 10,
        wall: 20
    };

    const resourceBuildings = ['wood', 'stone', 'iron'];

    const premiumBlock = document.querySelector('.premium_account_hint');
    if (premiumBlock) {
        console.log('⛔ Kolejka budowy pełna. Skrypt wstrzymany.');
        return;
    }

    const res = {
        wood: parseInt(document.getElementById('wood').textContent.replace(/\D/g, '')),
        stone: parseInt(document.getElementById('stone').textContent.replace(/\D/g, '')),
        iron: parseInt(document.getElementById('iron').textContent.replace(/\D/g, ''))
    };

    const rows = [...document.querySelectorAll("tr[id^='main_buildrow_']")];

    function tryUpgrade(buildingIds) {
        for (const row of rows) {
            const buildingId = row.id.replace("main_buildrow_", "");
            if (!buildingIds.includes(buildingId)) continue;

            const targetLevel = targetLevels[buildingId];
            if (typeof targetLevel !== "number") continue;

            const levelSpan = row.querySelector("span");
            const currentLevel = levelSpan ? parseInt(levelSpan.textContent.replace(/\D/g, "")) : null;

            if (currentLevel === null || currentLevel >= targetLevel) continue;

            const woodCost = parseInt(row.querySelector('.cost_wood')?.dataset.cost || "0");
            const stoneCost = parseInt(row.querySelector('.cost_stone')?.dataset.cost || "0");
            const ironCost = parseInt(row.querySelector('.cost_iron')?.dataset.cost || "0");

            const canAfford = res.wood >= woodCost && res.stone >= stoneCost && res.iron >= ironCost;

            if (canAfford) {
                const upgradeBtn = row.querySelector("a.btn-build");
                if (upgradeBtn) {
                    console.log(`🛠️ Ulepszam ${buildingId} (${currentLevel} → ${currentLevel + 1}) — koszt: ${woodCost}/${stoneCost}/${ironCost}`);
                    window.location.href = upgradeBtn.href;
                    return true; // przerwij po jednym ulepszeniu
                }
            } else {
                console.log(`💰 Brakuje zasobów na ${buildingId} — potrzeba: ${woodCost}/${stoneCost}/${ironCost}`);
            }
        }
        return false;
    }

    // 🔁 Najpierw próbuj ulepszyć surowcowe
    if (tryUpgrade(resourceBuildings)) return;

    // 🏗️ Potem pozostałe
    const otherBuildings = Object.keys(targetLevels).filter(key => !resourceBuildings.includes(key));
    tryUpgrade(otherBuildings);
})();
