// ==UserScript==
// @name         AutoBudynki Tribal Wars (pe≈Çna kontrola)
// @namespace    http://tampermonkey.net/
// @version      1.2
// @description  Ulepszanie budynk√≥w tylko je≈õli sƒÖ ≈õrodki, miejsce w kolejce i nie przekroczono poziomu docelowego
// @author       ChatGPT
// @match        *://*.plemiona.pl/game.php*screen=main*
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    // ‚úÖ Ustaw docelowe poziomy budynk√≥w tutaj:
    const targetLevels = {
        main: 20,
        barracks: 25,
        stable: 20,
        garage: 5,
        watchtower: 0,
        smith: 20,
        place: 1,
        statue: 1,
        market: 20,
        wood: 30,
        stone: 30,
        iron: 30,
        farm: 30,
        storage: 30,
        hide: 10,
        wall: 20
    };
    // üõë Je≈õli kolejka jest pe≈Çna (komunikat premium), to wyjd≈∫
    const premiumBlock = document.querySelector('.premium_account_hint');
    if (premiumBlock) {
        console.log('‚õî Kolejka budowy pe≈Çna. Skrypt wstrzymany.');
        return;
    }

    // ü™µ Surowce dostƒôpne:
    const res = {
        wood: parseInt(document.getElementById('wood').textContent.replace(/\D/g, '')),
        stone: parseInt(document.getElementById('stone').textContent.replace(/\D/g, '')),
        iron: parseInt(document.getElementById('iron').textContent.replace(/\D/g, ''))
    };

    const rows = document.querySelectorAll("tr[id^='main_buildrow_']");

    for (const row of rows) {
        const buildingId = row.id.replace("main_buildrow_", "");
        const targetLevel = targetLevels[buildingId];

        if (typeof targetLevel !== "number") continue;

        const levelSpan = row.querySelector("span");
        const currentLevel = levelSpan ? parseInt(levelSpan.textContent.replace(/\D/g, "")) : null;

        if (currentLevel === null || currentLevel >= targetLevel) continue;

        const woodCost = parseInt(row.querySelector('.cost_wood')?.dataset.cost || "0");
        const stoneCost = parseInt(row.querySelector('.cost_stone')?.dataset.cost || "0");
        const ironCost = parseInt(row.querySelector('.cost_iron')?.dataset.cost || "0");

        const canAfford = res.wood >= woodCost && res.stone >= stoneCost && res.iron >= ironCost;

        if (canAfford) {
            const upgradeBtn = row.querySelector("a.btn-build");
            if (upgradeBtn) {
                console.log(`üõ†Ô∏è Ulepszam ${buildingId} (${currentLevel} ‚Üí ${currentLevel + 1}) ‚Äî koszt: ${woodCost}/${stoneCost}/${ironCost}`);
                window.location.href = upgradeBtn.href;
                break; // tylko jedno ulepszenie
            }
        } else {
            console.log(`üí∞ Brakuje zasob√≥w na ${buildingId} ‚Äî potrzeba: ${woodCost}/${stoneCost}/${ironCost}`);
        }
    }
})();
